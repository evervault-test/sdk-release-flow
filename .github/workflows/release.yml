name: Changeset and Release Workflow

on:
  push:
    branches:
      - main

jobs:
  changesets:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get tags
      run: git fetch --tags origin

    - name: Setup Node.js environment
      uses: actions/setup-node@v3

    - name: Install dependencies
      run: npm install 

    - name: Create Release Pull Request
      id: changesets
      uses: changesets/action@v1
      with:
        title: 'New Release'
        commit: 'Release new version'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create new release
      if: steps.changesets.outputs.hasChangesets == 'false'
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        LATEST_TAG=$(git describe --tags --abbrev=0)
        if [ "v$PACKAGE_VERSION" != "$LATEST_TAG" ]; then
          npx changeset tag && git push origin --tags
          echo "Version in package.json ($PACKAGE_VERSION) is different from latest tag ($LATEST_TAG). Creating a new release..."
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          CHANGELOG=$(sed -n '/## [0-9]\+\.[0-9]\+\.[0-9]\+/,/## [0-9]\+\.[0-9]\+\.[0-9]\+/{
            # Do not include the lines with the version headings
            /## [0-9]\+\.[0-9]\+\.[0-9]\+/!p
            # Stop after the first block
            /## [0-9]\+\.[0-9]\+\.[0-9]\+/q
          }' ./CHANGELOG.md)
          gh release create v$PACKAGE_VERSION -t "Release v$PACKAGE_VERSION" -n "Release for version v$PACKAGE_VERSION"
        else
          echo "Version in package.json matches the latest tag. No new release needed."
        fi